%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 1171.000000 547.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.12.3 (Build 16D32) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 1171 547
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 1171 547
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: HelveticaNeue-Bold
%!FontType1-1.0: HelveticaNeue-Bold 1.0000.1.0000
14 dict begin/FontName /HelveticaNeue-Bold def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /C put
dup 34 /o put
dup 35 /r put
dup 36 /p put
dup 37 /u put
dup 38 /s put
dup 39 /space put
dup 40 /S put
dup 41 /e put
dup 42 /a put
dup 43 /c put
dup 44 /h put
dup 45 /ampersand put
dup 46 /l put
dup 47 /t put
dup 48 /i put
dup 49 /n put
dup 50 /B put
dup 51 /k put
dup 52 /g put
dup 53 /d put
dup 54 /v put
dup 55 /y put
dup 56 /A put
dup 57 /m put
dup 58 /I put
dup 59 /T put
dup 60 /F put
dup 61 /b put
dup 62 /one put
dup 63 /seven put
dup 64 /two put
dup 65 /four put
dup 66 /M put
dup 67 /three put
dup 68 /zero put
dup 69 /eight put
dup 70 /P put
dup 71 /j put
dup 72 /W put
dup 73 /colon put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -1018 1 index div -481 2 index div 1437 3 index div 1141 5 -1 roll div]cvx def
/sfnts [<







0011000600032BB8001110BA001500060011111239303113113311343633321615113311342E02232206072311368E343A33288E112A493928541B0302CAFD36010F4F453F40FEDC013E304F371F292D010D00000002003A000000C802CA000300070037BA0001000200032BB8000110B8000210B80004D0B8000110B80006D0B8000110B80009DC00B800052FBA0001000000032BB800011030311335231D01113311C88E8E0255757550FDFB0205000002FFEEFF4B00D102CA000300130037BA0001000200032BB8000110B8000CD0B8000210B8000ED0B8000110B80015DC00B800052FB800072FBA0001000000032BB800011030311335231503151633323E023511231114062322D18E551419364629118E21161302557575FD6F750413273A28021EFDE91D11000000000100430000024202CA000B0033BA000B000000032BB8000B10B80002D000B800012FB800052FB800002FBA000800010000111239BA000A000100001112393031131133353717330337230711438E378EACD9C3A8B302CAFD36B235E70147BEBA017F000001003A000000C802CA0003001BBA0003000000032BB8000310B80005DC00B800012FB800002F3031131133113A8E02CAFD3602CA0000000001003A000003500213002D007DBA002D000000032BB8002D10BA0010000D00032BB8001010BA001D001A00032BB8001D10B8000010B80003DCBA0025000D0010111239B8001D10B8002FDC00B800012FB8000E2FB8001B2FBA0028000800032BB8002810B8000810B80015D0B8002810B80022D0BA002500080028111239BA002C00080028111239303113113311343E0233321E0215113311343E0233321E0215113311342E02232206072E012322060723353A8E161F210A22230F028E0715251E1E2312048E1C324629364F17155131334F1C020205FDFB012C262F190917262D17FEDE0120182F251714222E1AFEDB015A32472C14342230262C284600000100360000021B02130016004DBA0016000000032BB8001610BA000C000900032BB8000C10B8001610B80002D0B800022FB8000C10B80018DC00B800012FB8000A2FBA0011000600032BB8001110BA001500060011111239303113113311343633321615113311342E02232206072335368E343A33288E112A49392D561B030205FDFB010F4F453F40FEDC013E304F371F292D4800000000020026FFF3023D02130013002700CBB800282FB800292FB8002810B80014D0B800142FB80000DC411B0006000000160000002600000036000000460000005600000066000000760000008600000096000000A6000000B6000000C60000000D5D410500D5000000E5000000025DB8002910B8001EDCB8000ADC410500DA000A00EA000A00025D411B0009000A0019000A0029000A0039000A0049000A005900


BE00040024001D00170011000A00122B00BE00010033002A00210017000E00122BBE0002002A0022001B0013000C00122B00BA0005000400112BB8000020457D691844B800002B00
00>] def
/CharStrings 44 dict dup begin
/.notdef 0 def
/space 1 def
/ampersand 2 def
/zero 3 def
/one 4 def
/two 5 def
/three 6 def
/four 7 def
/seven 8 def
/eight 9 def
/colon 10 def
/A 11 def
/B 12 def
/C 13 def
/F 14 def
/I 15 def
/M 16 def
/P 17 def
/S 18 def
/T 19 def
/W 20 def
/a 21 def
/b 22 def
/c 23 def
/d 24 def
/e 25 def
/g 26 def
/h 27 def
/i 28 def
/j 29 def
/k 30 def
/l 31 def
/m 32 def
/n 33 def
/o 34 def
/p 35 def
/r 36 def
/s 37 def
/t 38 def
/u 39 def
/v 40 def
/y 41 def
/uni2B90 42 def
/uni2B91 43 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-1018 -481 1437 1141}def
/UniqueID 4258367 def
currentdict currentfile eexec



4C0275CC3B1F64506AAAED3794C39896D5AC12D5E6C38DAAB9B6EC9129D1891A5A7D473F7A95D13B7A141698B4D166CE61958B3499C6100739611A2DF5929BEBC74DAB395EE2B54714635F37EEE10096EFFA15D6BE77602AE891A5EE6FDDC47D31AE1342F0663E4A030ADB39686187375130B52126A4F884CC40235E79B1C1421CAE1343E0C599CC1A929271606F3F94C8DC6E1B2E27A55BF6A9A28A7DD22B104A7E2F3834344BC192FAD12020D3300FBDD66BBA9991FB37C5C3543F596B50CE9278655D3BAF52BFC5A025DCF137CA5ACD2648B1CB3C4D897FB4B09629A771952839571C110FF6CDC756EDB7D303C74A2160636507070038CF7D65275721B48B56D210253C5531002C8CF16F925906A5C23800625EF8E38596D13EA9A1C0DAB583D839EF4E35522EADC494DFFDFB478F8C91B57FB9C4D04491CA0083BD5651AD56CB03758B75E2DA07ACF65849013CC496120E6F0A1825D8CF7E23C47DE6C375ACDFB92C7DDF6F7A2E295F04E10B67E9DD2413F14BE697C60D1070BF613572CE9F430A3F839CE80DB041C9CF0356F2DDF8580BB14AD4E070A51FB869D75F1D886833B64522E542AE36A8FC7CF5A1264A1C46730D91D1DD9B23C79FF907A0A030E2A0A19BD052E3E847861B14123D2B811E1371C0EDC47456A9819AF5B9F25391980A89969271929CB7645ACCA12C7F79ADAB8E6705516E78AAA826FDA1AA8D3A7442226C141FA1787A83BBA2963CD87CD28D15A1DD4DEB0C096100DC2FDFA4988F2912EB3BCDD50593EF3DF8A1F394BE38E7E8A7D5E453D25A35A754C4E975CF13DC0A559545D36A886AAEAEEC111472A83AF7A738F84715F531498583A74D5CB301E017E9FBDF736747E8041B20B881CB1A0C4DD299FBDD84A597B3E637C50241FAE60B508A7A633F34424172344DDCB7A7A850ECC35297E2CC2789420AE7EA6EC6628C915E90C8E91A6E47CF1BAC1C0B6DD1F57CF0CA9C414F0E97464E98E6528DEDABC6724AB358437D64A77D85A37C825ED2774D3C4A402E565D2FDF0875914044E6A7166B36C6411E37D1DBAEB3F06BB0D0DCBB8B539DDFB14BC4160E27E41E888AC9E382743DFB92AE37932B161AAFF088662A477348F6610BB6B9A5D4BBF42EBCFC30E0F5557AD9F144EAB05F0FA7630D4975EF016135D055491728609E6A99046AFC158E494FE3582DFD20C2859C027DCEA646786D8AAFDE7EB9795756E14B75E9BD42DE861C15D8D043CC3D58908AC402068F11712CA808C9B080200C2BD9EEEF023115319CB79135337628173C05859BDE3D012EA6C87A27CC35E9E677AA8CD3468FF6BEBCCDBCF1DB9EC8F18D37ABA6DE9E0BBF9B5A5920E010544F4EEBC0A8460207A44227F232C08E7D6AF7CB65F890267299858559146F4146D8E53C412A79DFDA19AA80D3AB1B308FD42A313094CDCA4E67C88B165195D2DA
EB3001F819F5836EDDCA961EE0510AAC5C2B3FA32AFA7E411EE7B2D84A78620D7F36930540BE997F5C269E9CEEDE248D9F52CA6B6FB780C5DC7F9AD5011352FB0207FC695015C44C5D20CDF6FAA44476EA9AFB99A93256EC50EB75A0848206B6EE05B55DD3703B5B8B825E9A060119CB70C34BC76FD611B51E0735C493EBD1DF112E5E720985E436BBA319EFCF802D6B31C504F6F37A3BAC62D2057487D713AC1BA84BB084FD3C1C7ABA495271AB29B23693C0292A97C9C301FD75D04DDA21A058B8B687B7DC6633A900824B44F7B051D1E65B14FC21774A57E307DA440891B8FFA49F527F35185069711D90DD9F5FA971218C93546832D1A55DF8C4EE72A12A26D14C97BE212705F0661B421F0B0FEF35C9AD1FB86C11702273F295F5CB4EACF49187B4D827649C9BB2398FC9A8A71EC05D92D9D4A3069E84AC8C2ED87E893D9E9FE70071375FE3F4B407A6DAB8CFE20C4EA3CD83B3E0910B0974D9BA0BE18DD78AD06B0147392DA2BC9203AA1CA247241FCC3576DA914791E2B720C6C86C28BF53D1BE80C131294A8FFB903E477F5438FB0124101B2B7AABF57B22997766351A2F64F1362EB93E737939ABFAFEFA512AE599772806B78799E813F74CCA296BDC1451A977100EED8099FE76CA114E6796E89F92390C93DFC1AFE75AF877B4084D01DEBBD4D768D5DD4F28E7197B3F5E9A7FEA76FEC1A781BB216651177A77932F60A83ACCF778B757F6C0681EB3425DAB8E9F9FB4FE37D238C79CDCEBBF1083457A6B5BCFABD0F57B36FF5BEFAFDD40F9A138C3425E8CBEFEF4B7B51B2050B7E874CEAB5621E85006162875860D4997FA039CA04941AC486A0957EE0B1FCA3B99FB57CEF9D4932358463F8A620F80DD5B0BA897ACA012ECA88A7DF7DBCBF553EAFF545A261A1B186BE794A70736A329A258F9234D23E6A6CB53D2A2B2B86563F38F0DBA9B00F619BE90679642B9573323CA4266FFDB616CC35AA373812A8D22BBDD86ECC777D0C8ED54C90F75A656852C86B10A0343BF3F0D0DE84DD6B498DF83F12FC7B72FC683B2A6CE9FFAE3817E3DB73A7B17B122820D478CFB543AC3DEAD76337D9819BD3F6230FAD8C88055999614D52D87AD9B62987033C31683B4079F779731867ABB7D937D307F6D65AF3DC262C21CA570EA9E494F47A1883E7AB54EBFDACF585D5BE491AA2A2B18B1D091877515A363E13729A987113ECA813D0F9D11DA6909E3E1DE4276C47FC703501F61BF5EC36C0681D85E7AB781ECAFB8D4BC6C9724AEAAD3E877DCFA83810399E248437094F10AEC3822864E16D967C84DEBAABF0CFFBC13D1F0A6B175128AD6E48533E33E36BEBCBFFB199F3FBB27DB9FE68694157C794ADDFC7760BCC61BB7691993B943F869ACAA1A2BCD167135CF5BC25D5C6512D5A4E03CD21AAF4B24357EF6A74DC27FC4AD4CC5307F5B37211319
F1CDC874C0840EDC50856144183C5A1226A98CFB217E3BB49056D31A31C9A288B16287AC7DC0D133DFA2CE9893AFE27E7663241E4AF0292B9D48D4FF0B92BCEE7BC21068D33C90229749CA40465DDCD7A9EE2A37A8F2F6E219CA18C59472692CBC916006F99622D0DAB1E3CFA10201D189F9D8F22F27CAFD83708F1B55614CE5C5F39B0480CC40748966DB6BF0205FAA5F428E2F80650F3B561243C04E93542DE1C776EE2A54CCA3DD4BF897C1BBAC50D537A00ECA3B205BD28D7626F8060CF579E4D002874974B2960AF074616A1CE08FBE39F48D01698DC7DDC4A1B4A01B43B369DEF7FFA4E09322F61A7AE155C06FFA706D6C7535D6A60BB50BF957EACBE94D8DC893F02BA9E4F1DA7ADA0811C8AB02382F105F388095ED14C3195935C3938549D97DEE005C6CB66FD764478CD0DBED417D3A3AC09B9EFA62B8B8A590B823B6DBB491BC2D51A9964A0A3778652DA3BB548C30AE9C5509E55E1F8F1B4F85A7214326EFF08F0D27970108E47E3CAA8A5454D0ACCECCB16817BA6ABE60BBB3D430CBB841D78538C164F7C74B304CC98104CBE128EAEFF1196AD862D42A08E52E5ED3724C02D58FE1FC50D2F7E681B14068252748712A8582BB495AC703E26C166B26D94FA17F964F3098B4D2A5FBFB77077F4DA14D277FA4F695FE41207F36B0F9888B38B01BF2E0DE7897FBBE688063217B2F6227CEDA765DCEBE9F39679245F986E9EF4AD8B7EDDC89AB4242C48490A3E11909D11B38814F09C9512BCF2C9F6F9F2496641415ECBE141C9F85F594735A9A2E8545C56CA049F127D7A069F7E5F9617EDC130D43CF1142F7148D06D9011516D4CDC7C65924AEFB4FADA4F3E58DBDC5F92F75E4BB871BBAC0D9D3BB99C31195568AC6B3F4704C33D1B7AF55CAFC6D2953BDAC29A0152BDFAE80F1F3F356AF1F38CA232A1BA3AFC1773D9089F54DB84E7C2E2D1FD0190FEF8223A909EBE854342A46BE20B823E69E560E237866F1BB0D06918C4E24D4A6945CF11B8F2446E4AF79BAF9012ABFDD8A6E65861804967257F19958681B7F70D335D91A1C1357AFBD12545EB19A9664A074D374B4DD876DFBD95058E66F1C547FD4DAF131573E914C8B03214160459313144942A06576739C2D5145A46C7BF41D5F5DCB30677213CD462F73FD2325B5539E859B99978C608285A2EDADD17A7C5BDD91EC88A60540824143AE9B4E1358DFAEB00D1100A6230219B737C60BF6DBF43D4C2BA6CEAAE848DCBBBBDE2C7893974092DAAB9E3FFCD2804258E7246418609CE6DF4DA70F03C3F87A44A5BE0AE31BB386EF6E6B7594192A6CF1B04A461E6C1DB34A448EDC22CC78881F055F3AC2F8ECCAF601F486D6B9270C1E5136FEDE1BC87383F47F6DC35000775E1C2CE47179A83B2E053172E55E5AD7AF38DF2BF307A64B40C36671E16B9A5334C8F169C3DF358D4E49A53E
1026D5B52EF58AEC27BA88F1B99B8E7A5B42C07B20934A29F851D51FCAA3D9FB0EA7F3204173512008FEB09EA3E6612D3A4AF34DD295419F1F12BD57277B82280E861CA52B1565A216DA6A4D57D64A1194B85A64D445EC435A75B6B35DD029DA9F449FD6B64B987E8D7BC8670E4E6499B49BA1881FA44D107A88FD8CF0269DC192BD9E7129E5560BF422FD55F9B6CFB83216630BE588E7F4296D22187C1C2DCBDD581B3B5756538D28BC74CCF1EE70B98F9C566DA5811BE518D7D38C2212ED08CAE4D1BB65F10A0311169094BBC71B6DC0C325C5D64A24D7474E2088F84A3B8E6BE6D722F5232DC25D8499DA3DEF4805010B17DA8E3E3789F4545F09B6C7B740BC49B3C55D8295ABCBCE0152177405EAE216EFC8D322DB21426D5C8A9BFD8868C83868B425E4D450A6C5605BD67D07C6C649939B2F20D5967A8045D9B56657471D584DA05A6667DA3BC90D49EFA810E3676839421BC5589EC5B021ED81BC584F76D50AF985148C8E18220B41B037FEB08297186AD297768AC466F6E6F779D3AE3AE65949186E0A0A6F9C5EF5AFABDF7F00520A98877F4552868C9F7CBFBE6803C4DCBB5E1E60350CCB71425DFE0F3796C7CB30C870388AF01662F1BF74CF24BF5699163CFC29456693FC989DB561500835CF07B1C2C8DCECF09EE1602EF856E2C2D5438742D94E6F3D6388DEF2523CBE333487F037AFD2C3DDF497E733A837E7A20E37A3734CED18452BEBBD95D5A481110FFE1FB60600E580E3110F0D0A73B7D9B41B5F3C97B1135ED6A9DC97087184AA965A1AD95D4D7B3FDDDAE3E4A825F82106D96B1E15185C1246945FA634B0DA9EF0EE2E69EA01593449E372E17D1492AB01176A357C926641DE02FE6A1806D19EA1FFD21A678C2E8D9F4859D4D233AF2EC074577838978BF25AC20173D74312F039D61540D3E0F8C2506D32557C63AFBF11BE385FAE9E4666969B0D31FBBA080271259D671703069FD6C84553691B0C246B8D1B43CAB40EE8A8B09B7D160AE1D24B1D2390B306E704158C1870EB230C8A371DA1F999FD7CAEFC3237D5A67A197F25391BBF5A61F2EA4FD47A22EE856DC6546AB1DE656F644EF8BFC1D1B8AFD53430EE4CAB6015C973206BCD3414F523BC874B17501A0C9CE08D61964028814CFB9EACD86BC148CC539A32C2E281D3371CA9AA28619570C5A4E503441BA63920E9DAD4E431426FBE537ED0F765F04564EF944CD0F66F6DBA990046B4E85D3E9498E5911A682F3C461C5186AE4E88E5E38E93184A73FC7C42D38CF4EAA8ACDA63D54645381B34DE58444C43EE1A5BD03B90C3B9B6BA4054650D2AA550475DF655DE5F0EDDD732A90E9C0AF6A12122A7BA1F9C669FB27509E0D722EA914204AC669EEAFB4AF4BC7A3C84F16FB7337D0869EA9E2725349C4FA162A5DB67C60BAE24CBA5383A96B80055777278B2ED28EB91

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HelveticaNeue-Bold cguidfix
/F1.1/HelveticaNeue-Bold renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 1 1 sc
q
0 0 1171 547 rc
0 547 m
1171 547 l
1171 -105 l
0 -105 l
h
0 547 m
f
6 461 m
1167 461 l
1167 4 l
6 4 l
h
6 461 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 0 547 cm
6 86 m
1167 86 l
1167 543 l
6 543 l
h
6 86 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 228.77629 220.5 cm
/F1.1[ 22 0 0 -22 0 0]sf
-140.569 7.6809235 m
(!"#$%&'\(\)*#+,'-'\(\).\)+/0"1)[ 16.302000 13.442000 8.558000 13.442000 13.046000 11.814000 6.116000 14.278000 12.628000 12.628000 8.162000 12.628000 13.046000 6.116000 15.070000 6.116000 14.278000 12.628000 5.676000 12.628000 12.628000 7.744000 5.676000 13.442000 0.000000 ] xS
1 0 0 -1 266.77628 285.5 cm
-102.718 7.6809235 m
(2*+34#"%15'\(%#6\)7)[ 15.488000 12.628000 12.628000 12.628000 13.442000 8.162000 13.442000 13.046000 13.046000 13.442000 6.116000 14.278000 13.046000 8.558000 11.440000 12.628000 0.000000 ] xS
1 0 0 -1 233.27629 160.5 cm
-136.37801 7.6809235 m
(8.4"#0/,9':9$.\)9\)1/*/0"1)[ 15.070000 5.676000 13.442000 13.442000 8.558000 5.676000 7.744000 13.046000 19.932000 6.116000 6.490000 19.932000 13.442000 5.676000 12.628000 19.932000 12.628000 13.046000 7.744000 12.628000 7.744000 5.676000 13.442000 0.000000 ] xS
1 0 0 -1 198.44733 104.5 cm
-169.81799 7.6809235 m
(8.4"#0/,9';\)&/014'-'!"9$*#0&"1)[ 15.070000 5.676000 13.442000 13.442000 8.558000 5.676000 7.744000 13.046000 19.932000 6.116000 11.000000 12.628000 11.814000 7.744000 5.676000 13.046000 13.442000 6.116000 15.070000 6.116000 16.302000 13.442000 19.932000 13.442000 12.628000 8.558000 5.676000 11.814000 13.442000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
398 410 m
397 410 l
397 21 l
398 21 l
h
398 410 m
f
3 w
0.60000002 i
0 0 0 sc
1 0 0 -1 0 547 cm
398 137 m
397 137 l
397 526 l
398 526 l
h
398 137 m
S
0 i
1 1 1 sc
CM
462 410 m
461 410 l
461 21 l
462 21 l
h
462 410 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 0 547 cm
462 137 m
461 137 l
461 526 l
462 526 l
h
462 137 m
S
0 i
1 1 1 sc
CM
527.22015 410 m
526.22015 410 l
526.22015 21 l
527.22015 21 l
h
527.22015 410 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 0 547 cm
527.22015 137 m
526.22015 137 l
526.22015 526 l
527.22015 526 l
h
527.22015 137 m
S
0 i
1 1 1 sc
CM
596.37067 410 m
595.37067 410 l
595.37067 21 l
596.37067 21 l
h
596.37067 410 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 0 547 cm
596.37067 137 m
595.37067 137 l
595.37067 526 l
596.37067 526 l
h
596.37067 137 m
S
0 i
1 1 1 sc
CM
670.42688 410 m
669.42688 410 l
669.42688 21 l
670.42688 21 l
h
670.42688 410 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 0 547 cm
670.42688 137 m
669.42688 137 l
669.42688 526 l
670.42688 526 l
h
670.42688 137 m
S
0 i
1 1 1 sc
CM
746.36987 410 m
745.36987 410 l
745.36987 21 l
746.36987 21 l
h
746.36987 410 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 0 547 cm
746.36987 137 m
745.36987 137 l
745.36987 526 l
746.36987 526 l
h
746.36987 137 m
S
0 i
1 1 1 sc
CM
822.31287 410 m
821.31287 410 l
821.31287 21 l
822.31287 21 l
h
822.31287 410 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 0 547 cm
822.31287 137 m
821.31287 137 l
821.31287 526 l
822.31287 526 l
h
822.31287 137 m
S
0 i
1 1 1 sc
CM
891.65643 410 m
890.65643 410 l
890.65643 21 l
891.65643 21 l
h
891.65643 410 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 0 547 cm
891.65643 137 m
890.65643 137 l
890.65643 526 l
891.65643 526 l
h
891.65643 137 m
S
0 i
1 1 1 sc
CM
967.40643 410 m
966.40643 410 l
966.40643 21 l
967.40643 21 l
h
967.40643 410 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 0 547 cm
967.40643 137 m
966.40643 137 l
966.40643 526 l
967.40643 526 l
h
967.40643 137 m
S
0 i
1 1 1 sc
CM
1041.5 410 m
1040.5 410 l
1040.5 21 l
1041.5 21 l
h
1041.5 410 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 0 547 cm
1041.5 137 m
1040.5 137 l
1040.5 526 l
1041.5 526 l
h
1041.5 137 m
S
0 i
1 1 1 sc
CM
1112.5 410 m
1111.5 410 l
1111.5 21 l
1112.5 21 l
h
1112.5 410 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 0 547 cm
1112.5 137 m
1111.5 137 l
1111.5 526 l
1112.5 526 l
h
1112.5 137 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 393.65216 427.5 cm
/F1.1[ 20 0 0 -20 0 0]sf
-31.68 7.7099304 m
(<\)='>?)[ 11.860000 11.480000 12.220000 5.560000 11.120000 0.000000 ] xS
1 0 0 -1 465.5 427.5 cm
-31.68 7.7099304 m
(<\)='@A)[ 11.860000 11.480000 12.220000 5.560000 11.120000 0.000000 ] xS
1 0 0 -1 530.17389 427.5 cm
-27.040001 7.7099304 m
(B*#'C)[ 18.140000 11.480000 7.780000 5.560000 0.000000 ] xS
1 0 0 -1 599.92389 427.5 cm
-32.599998 7.7099304 m
(B*#'>D)[ 18.140000 11.480000 7.780000 5.560000 11.120000 0.000000 ] xS
1 0 0 -1 667.67389 427.5 cm
-29.82 7.7099304 m
(B*#>?)[ 18.140000 11.480000 7.780000 11.120000 0.000000 ] xS
1 0 0 -1 742.84784 427.5 cm
-32.599998 7.7099304 m
(B*#'@A)[ 18.140000 11.480000 7.780000 5.560000 11.120000 0.000000 ] xS
1 0 0 -1 821.81287 427.5 cm
-32.599998 7.7099304 m
(B*#'C>)[ 18.140000 11.480000 7.780000 5.560000 11.120000 0.000000 ] xS
1 0 0 -1 971.56287 427.5 cm
-30.75 7.7099304 m
(8$#'>A)[ 13.700000 12.220000 7.780000 5.560000 11.120000 0.000000 ] xS
1 0 0 -1 1051 427.5 cm
-30.75 7.7099304 m
(8$#'@>)[ 13.700000 12.220000 7.780000 5.560000 11.120000 0.000000 ] xS
1 0 0 -1 1117 427.5 cm
-30.75 7.7099304 m
(8$#'@E)[ 13.700000 12.220000 7.780000 5.560000 11.120000 0.000000 ] xS
1 0 0 -1 897.62579 427.5 cm
-25.190001 7.7099304 m
(8$#'?)[ 13.700000 12.220000 7.780000 5.560000 0.000000 ] xS
/Cs1 SC
0.40784314 0.73725492 0.21176471 sc
CM
420.22372 297 m
545.22369 297 l
545.22369 267 l
420.22372 267 l
h
420.22372 297 m
f
1 w
0.60000002 i
0 0 0 sc
1 0 0 -1 0 547 cm
420.22372 250 m
545.22369 250 l
545.22369 280 l
420.22372 280 l
h
420.22372 250 m
S
0 i
0.40784314 0.73725492 0.21176471 sc
CM
573.79498 179 m
746.36987 179 l
746.36987 149 l
573.79498 149 l
h
573.79498 179 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 0 547 cm
573.79498 368 m
746.36987 368 l
746.36987 398 l
573.79498 398 l
h
573.79498 368 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 227.77629 41.5 cm
/F1.1[ 22 0 0 -22 0 0]sf
-141.55901 7.6809235 m
(F#"G\)+/'\(%99*#7'-'H#0/014)[ 14.674000 8.162000 13.442000 6.116000 12.628000 12.628000 7.744000 6.116000 14.278000 13.046000 19.932000 19.932000 12.628000 8.558000 11.418000 6.116000 15.070000 6.116000 20.372000 8.558000 5.676000 7.744000 5.676000 13.046000 0.000000 ] xS
/Cs1 SC
0.40784314 0.73725492 0.21176471 sc
CM
495.5 235.5 m
620.5 235.5 l
620.5 205.5 l
495.5 205.5 l
h
495.5 235.5 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 0 547 cm
495.5 311.5 m
620.5 311.5 l
620.5 341.5 l
495.5 341.5 l
h
495.5 311.5 m
S
0 i
1 0.56862748 0.3019608 sc
CM
812.63367 123 m
998.83862 123 l
998.83862 93 l
812.63367 93 l
h
812.63367 123 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 0 547 cm
812.63367 424 m
998.83862 424 l
998.83862 454 l
812.63367 454 l
h
812.63367 424 m
S
0 i
1 0.56862748 0.3019608 sc
CM
897.25592 60 m
1100 60 l
1100 30 l
897.25592 30 l
h
897.25592 60 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 0 547 cm
897.25592 487 m
1100 487 l
1100 517 l
897.25592 517 l
h
897.25592 487 m
S
0 i
1 0.56862748 0.3019608 sc
CM
745.36987 179 m
856.61572 179 l
856.61572 149 l
745.36987 149 l
h
745.36987 179 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 0 547 cm
745.36987 368 m
856.61572 368 l
856.61572 398 l
745.36987 398 l
h
745.36987 368 m
S
0 i
0.40784299 0.73725498 0.21176501 sc
CM
88.939552 411 m
213.93954 411 l
213.93954 381 l
88.939552 381 l
h
88.939552 411 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 0 547 cm
88.939552 136 m
213.93954 136 l
213.93954 166 l
88.939552 166 l
h
88.939552 136 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 287.65216 399.5 cm
-63.734001 7.6809235 m
(I'!"9$.\)/\)5)[ 6.116000 6.116000 16.302000 13.442000 19.932000 13.442000 5.676000 12.628000 7.744000 12.628000 0.000000 ] xS
/Cs1 SC
1 0.56862748 0.3019608 sc
CM
88.939552 361 m
213.93954 361 l
213.93954 331 l
88.939552 331 l
h
88.939552 361 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 0 547 cm
88.939552 186 m
213.93954 186 l
213.93954 216 l
88.939552 216 l
h
88.939552 186 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 287.65216 349.5 cm
-63.766998 7.6809235 m
(I';"'=\)'5"1\))[ 6.116000 6.116000 11.000000 13.442000 6.116000 13.442000 12.628000 6.116000 13.442000 13.442000 13.046000 0.000000 ] xS
ep
end
%%Trailer
%%EOF
